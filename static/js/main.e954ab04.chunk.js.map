{"version":3,"sources":["components/Clock/Clock.js","components/Controls/SeshCtrl.js","components/Controls/BreakCtrl.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Clock","props","state","timeRemaining","sessionLength","time","this","timeSeconds","setState","timerID","setInterval","tick","clearInterval","timerState","playBeep","setTimeout","handleTimerEnd","document","getElementById","play","start_stop_icon","pad","d","toString","className","minutes","Math","floor","seconds","id","label","onClick","handleStartStopClick","handleResetClick","preload","src","React","Component","SeshCtrl","handleClick","BreakCtrl","breakLength","App","bind","handleUpDownClick","clockElement","createRef","current","resetTimer","e","clickedBtn","currentTarget","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e954ab04.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.css';\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeRemaining: this.props.sessionLength * 60\n        }\n    }\n\n    resetTimer(time=this.props.sessionLength) {\n        let timeSeconds = time * 60;\n        this.setState({\n            timeRemaining: timeSeconds\n        });\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        if (this.props.timerState === 'running' && this.state.timeRemaining > 1) {\n            this.setState({\n                timeRemaining: this.state.timeRemaining - 1 // decrement by 1 second\n            });\n        } else if (this.props.timerState === 'running' && this.state.timeRemaining === 1) {\n            this.setState({\n                timeRemaining: this.state.timeRemaining - 1 // decrement by 1 second\n            });\n        } \n        else if (this.props.timerState === 'running' && this.state.timeRemaining <= 0) {\n            this.playBeep();\n            setTimeout(1000);\n            this.props.handleTimerEnd();\n        }\n    }\n\n    playBeep() {\n        const sound = document.getElementById(\"beep\");\n        sound.play();\n    }\n\n    render() {\n        // render correct play/pause icon\n        var start_stop_icon;\n        if (this.props.timerState === 'paused') {\n            start_stop_icon = <i className=\"fa fa-play-circle fa-2x\"></i>\n        } else {\n            start_stop_icon = <i className=\"fa fa-pause-circle fa-2x\"></i>\n        }\n        // format minutes and seconds and add padding (e.g. 1 becomes 01)\n        function pad(d) {\n            return (d < 10) ? '0' + d.toString() : d.toString();\n        }\n        var minutes = pad(Math.floor(this.state.timeRemaining / 60));\n        var seconds = pad(Math.floor(this.state.timeRemaining % 60));\n        return (\n            <div id=\"clock-container\" className=\"rounded\">\n                <h3 id=\"timer-label\">{this.props.label}</h3>\n                <h2 id=\"time-left\">{minutes}:{seconds}</h2>\n                <div id=\"clock-controls\">\n                    <button id=\"start_stop\" className=\"btn btn-success clockBtn\" onClick={this.props.handleStartStopClick}>\n                        {start_stop_icon}\n                    </button>\n                    <button id=\"reset\" className=\"btn btn-danger clockBtn\" onClick={this.props.handleResetClick}>\n                        <i className=\"fa fa-undo fa-2x\"></i>\n                    </button>\n                </div>\n                <audio \n                    id=\"beep\" \n                    preload=\"auto\" \n                    src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n                    className=\"clip\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default Clock;","import React from 'react';\nimport './Ctrl.css';\n\nclass SeshCtrl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div id=\"session-container\" className=\"ctrl-outer\">\n                <h3 id=\"session-label\">Session Length</h3>\n                <div id=\"session-controls\" className=\"ctrl-inner\">\n                    <button id=\"session-decrement\" className=\"btn btn-secondary adjustBtn\" onClick={this.props.handleClick}>\n                        <i className=\"fa fa-chevron-down\"></i>\n                    </button>\n                    <h4 id=\"session-length\">{this.props.sessionLength}</h4>\n                    <button id=\"session-increment\" className=\"btn btn-primary adjustBtn\" onClick={this.props.handleClick}>\n                        <i className=\"fa fa-chevron-up\"></i>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SeshCtrl;","import React from 'react';\nimport './Ctrl.css';\n\nclass BreakCtrl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div id=\"break-container\" className=\"ctrl-outer\">\n                <h3 id=\"break-label\">Break Length</h3>\n                <div id=\"break-controls\" className=\"ctrl-inner\">\n                    <button id=\"break-decrement\" className=\"btn btn-secondary adjustBtn\" onClick={this.props.handleClick}>\n                        <i className=\"fa fa-chevron-down\"></i>\n                    </button>\n                    <h4 id=\"break-length\">{this.props.breakLength}</h4>\n                    <button id=\"break-increment\" className=\"btn btn-primary adjustBtn\" onClick={this.props.handleClick}>\n                        <i className=\"fa fa-chevron-up\"></i>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BreakCtrl;","import React from 'react';\nimport './App.css';\nimport Clock from '../Clock/Clock';\nimport SeshCtrl from '../Controls/SeshCtrl';\nimport BreakCtrl from '../Controls/BreakCtrl';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: 'Session',\n      timerState: 'paused',\n      sessionLength: 25,\n      breakLength: 5\n      //test on feature/clock\n    }\n    // test for develop branch\n    this.handleStartStopClick = this.handleStartStopClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.handleUpDownClick = this.handleUpDownClick.bind(this);\n    this.handleTimerEnd = this.handleTimerEnd.bind(this);\n    this.clockElement = React.createRef();\n  }\n\n  handleStartStopClick() {\n    if (this.state.timerState === 'paused') {\n      this.setState({\n        timerState: 'running'\n      });\n    } else {\n      this.setState({\n        timerState: 'paused'\n      });\n    }\n  }\n\n  handleResetClick() {\n    this.setState({\n      label: 'Session',\n      timerState: 'paused',\n      sessionLength: 25,\n      breakLength: 5\n    }, function () {\n      this.clockElement.current.resetTimer();\n    });\n  }\n\n  handleTimerEnd() {\n    if (this.state.label === 'Session') {\n      this.clockElement.current.resetTimer(this.state.breakLength);\n      return this.setState({\n        label: 'Break'\n      });\n    } else {\n      this.clockElement.current.resetTimer(this.state.sessionLength);\n      return this.setState({\n        label: 'Session'\n      });\n    }\n  }\n\n  handleUpDownClick(e) {\n    if (this.state.timerState === 'paused') {\n      var clickedBtn = e.currentTarget.id;\n      // increment break (reset timer if currently on Break)\n      if (clickedBtn === 'break-increment') {\n        if (this.state.breakLength < 60) {\n          this.setState({ breakLength: this.state.breakLength + 1 }, function () {\n            if (this.state.label === 'Break') {\n              this.clockElement.current.resetTimer(this.state.breakLength);\n            }\n          });\n        }\n      }  \n      // decrement break (reset timer if currently on Break)\n      if (clickedBtn === 'break-decrement') {\n        if (this.state.breakLength > 1) {\n          this.setState({ breakLength: this.state.breakLength - 1 }, function () {\n            if (this.state.label === 'Break') {\n              this.clockElement.current.resetTimer(this.state.breakLength);\n            }\n          });\n        }\n      } \n      // increment session (reset timer if currently on Session)\n      if (clickedBtn === 'session-increment') { \n        if (this.state.sessionLength < 60) {\n          this.setState({ sessionLength: this.state.sessionLength + 1 }, function () {\n            if (this.state.label === 'Session') {\n              this.clockElement.current.resetTimer(this.state.sessionLength);\n            }\n          });\n        }\n      }\n      // decrement session (reset timer if currently on Session)\n      if (clickedBtn === 'session-decrement') {\n        if (this.state.sessionLength > 1) {\n          this.setState({ sessionLength: this.state.sessionLength - 1 }, function () {\n            if (this.state.label === 'Session') {\n              this.clockElement.current.resetTimer(this.state.sessionLength);\n            }\n          });\n        }\n      } \n    }\n  } \n\n  render() {\n    return (\n      <div id=\"container\" className=\"shadow-lg bg-white rounded\">\n        <h1>Pomodoro Clock</h1>\n        <div id=\"controls-container\">\n          <BreakCtrl breakLength={this.state.breakLength} handleClick={this.handleUpDownClick} />\n          <SeshCtrl sessionLength={this.state.sessionLength} handleClick={this.handleUpDownClick} />\n        </div>\n        <Clock ref={this.clockElement}\n          label={this.state.label}\n          handleTimerEnd={this.handleTimerEnd}\n          timerState={this.state.timerState} \n          sessionLength={this.state.sessionLength}\n          breakLength={this.state.breakLength}\n          handleStartStopClick={this.handleStartStopClick} \n          handleResetClick={this.handleResetClick} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}